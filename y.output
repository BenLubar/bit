
state 0
	$accept: .program $end 

	LINE  shift 3
	.  error

	program  goto 1
	line  goto 2

state 1
	$accept:  program.$end 
	program:  program.line 

	$end  accept
	LINE  shift 3
	.  error

	line  goto 4

state 2
	program:  line.    (1)
	line:  line.goto 

	GOTO  shift 6
	.  reduce 1 (src line 39)

	goto  goto 5

state 3
	line:  LINE.NUMBER number CODE stmt 

	NUMBER  shift 7
	.  error


state 4
	program:  program line.    (2)
	line:  line.goto 

	GOTO  shift 6
	.  reduce 2 (src line 48)

	goto  goto 5

state 5
	line:  line goto.    (26)

	.  reduce 26 (src line 205)


state 6
	goto:  GOTO.number 
	goto:  GOTO.number IF THE JUMP REGISTER IS bit_constant 

	ZERO  shift 10
	ONE  shift 11
	.  error

	bit_constant  goto 9
	number  goto 8

state 7
	line:  LINE NUMBER.number CODE stmt 

	ZERO  shift 10
	ONE  shift 11
	.  error

	bit_constant  goto 9
	number  goto 12

state 8
	number:  number.bit_constant 
	goto:  GOTO number.    (7)
	goto:  GOTO number.IF THE JUMP REGISTER IS bit_constant 

	ZERO  shift 10
	ONE  shift 11
	IF  shift 14
	.  reduce 7 (src line 85)

	bit_constant  goto 13

state 9
	number:  bit_constant.    (5)

	.  reduce 5 (src line 69)


state 10
	bit_constant:  ZERO.    (3)

	.  reduce 3 (src line 58)


state 11
	bit_constant:  ONE.    (4)

	.  reduce 4 (src line 63)


state 12
	number:  number.bit_constant 
	line:  LINE NUMBER number.CODE stmt 

	ZERO  shift 10
	ONE  shift 11
	CODE  shift 15
	.  error

	bit_constant  goto 13

state 13
	number:  number bit_constant.    (6)

	.  reduce 6 (src line 75)


state 14
	goto:  GOTO number IF.THE JUMP REGISTER IS bit_constant 

	THE  shift 16
	.  error


state 15
	line:  LINE NUMBER number CODE.stmt 

	ZERO  shift 10
	ONE  shift 11
	THE  shift 19
	VARIABLE  shift 29
	OPEN  shift 26
	PRINT  shift 20
	READ  shift 21
	.  error

	stmt  goto 17
	variable  goto 27
	expr  goto 18
	expr1  goto 22
	expr2  goto 23
	expr3  goto 24
	expr4  goto 25
	bit_constant  goto 28

state 16
	goto:  GOTO number IF THE.JUMP REGISTER IS bit_constant 

	JUMP  shift 30
	.  error


state 17
	line:  LINE NUMBER number CODE stmt.    (25)

	.  reduce 25 (src line 199)


state 18
	expr:  expr.NAND expr1 
	stmt:  expr.EQUALS expr 

	NAND  shift 31
	EQUALS  shift 32
	.  error


state 19
	expr1:  THE.ADDRESS OF expr1 
	expr2:  THE.VALUE BEYOND expr2 
	expr3:  THE.VALUE AT expr3 
	stmt:  THE.JUMP REGISTER EQUALS expr 

	JUMP  shift 35
	VALUE  shift 34
	ADDRESS  shift 33
	.  error


state 20
	stmt:  PRINT.bit_constant 

	ZERO  shift 10
	ONE  shift 11
	.  error

	bit_constant  goto 36

state 21
	stmt:  READ.    (24)

	.  reduce 24 (src line 193)


state 22
	expr:  expr1.    (11)

	.  reduce 11 (src line 118)


state 23
	expr1:  expr2.    (13)

	.  reduce 13 (src line 129)


state 24
	expr2:  expr3.    (15)

	.  reduce 15 (src line 140)


state 25
	expr3:  expr4.    (17)

	.  reduce 17 (src line 151)


state 26
	expr4:  OPEN.PARENTHESIS expr CLOSE PARENTHESIS 

	PARENTHESIS  shift 37
	.  error


state 27
	expr4:  variable.    (19)

	.  reduce 19 (src line 162)


state 28
	expr4:  bit_constant.    (20)

	.  reduce 20 (src line 166)


state 29
	variable:  VARIABLE.number 

	ZERO  shift 10
	ONE  shift 11
	.  error

	bit_constant  goto 9
	number  goto 38

state 30
	goto:  GOTO number IF THE JUMP.REGISTER IS bit_constant 

	REGISTER  shift 39
	.  error


state 31
	expr:  expr NAND.expr1 

	ZERO  shift 10
	ONE  shift 11
	THE  shift 41
	VARIABLE  shift 29
	OPEN  shift 26
	.  error

	variable  goto 27
	expr1  goto 40
	expr2  goto 23
	expr3  goto 24
	expr4  goto 25
	bit_constant  goto 28

state 32
	stmt:  expr EQUALS.expr 

	ZERO  shift 10
	ONE  shift 11
	THE  shift 41
	VARIABLE  shift 29
	OPEN  shift 26
	.  error

	variable  goto 27
	expr  goto 42
	expr1  goto 22
	expr2  goto 23
	expr3  goto 24
	expr4  goto 25
	bit_constant  goto 28

state 33
	expr1:  THE ADDRESS.OF expr1 

	OF  shift 43
	.  error


state 34
	expr2:  THE VALUE.BEYOND expr2 
	expr3:  THE VALUE.AT expr3 

	AT  shift 45
	BEYOND  shift 44
	.  error


state 35
	stmt:  THE JUMP.REGISTER EQUALS expr 

	REGISTER  shift 46
	.  error


state 36
	stmt:  PRINT bit_constant.    (23)

	.  reduce 23 (src line 185)


state 37
	expr4:  OPEN PARENTHESIS.expr CLOSE PARENTHESIS 

	ZERO  shift 10
	ONE  shift 11
	THE  shift 41
	VARIABLE  shift 29
	OPEN  shift 26
	.  error

	variable  goto 27
	expr  goto 47
	expr1  goto 22
	expr2  goto 23
	expr3  goto 24
	expr4  goto 25
	bit_constant  goto 28

state 38
	number:  number.bit_constant 
	variable:  VARIABLE number.    (9)

	ZERO  shift 10
	ONE  shift 11
	.  reduce 9 (src line 106)

	bit_constant  goto 13

state 39
	goto:  GOTO number IF THE JUMP REGISTER.IS bit_constant 

	IS  shift 48
	.  error


state 40
	expr:  expr NAND expr1.    (10)

	.  reduce 10 (src line 113)


state 41
	expr1:  THE.ADDRESS OF expr1 
	expr2:  THE.VALUE BEYOND expr2 
	expr3:  THE.VALUE AT expr3 

	VALUE  shift 34
	ADDRESS  shift 33
	.  error


state 42
	expr:  expr.NAND expr1 
	stmt:  expr EQUALS expr.    (21)

	NAND  shift 31
	.  reduce 21 (src line 176)


state 43
	expr1:  THE ADDRESS OF.expr1 

	ZERO  shift 10
	ONE  shift 11
	THE  shift 41
	VARIABLE  shift 29
	OPEN  shift 26
	.  error

	variable  goto 27
	expr1  goto 49
	expr2  goto 23
	expr3  goto 24
	expr4  goto 25
	bit_constant  goto 28

state 44
	expr2:  THE VALUE BEYOND.expr2 

	ZERO  shift 10
	ONE  shift 11
	THE  shift 51
	VARIABLE  shift 29
	OPEN  shift 26
	.  error

	variable  goto 27
	expr2  goto 50
	expr3  goto 24
	expr4  goto 25
	bit_constant  goto 28

state 45
	expr3:  THE VALUE AT.expr3 

	ZERO  shift 10
	ONE  shift 11
	THE  shift 53
	VARIABLE  shift 29
	OPEN  shift 26
	.  error

	variable  goto 27
	expr3  goto 52
	expr4  goto 25
	bit_constant  goto 28

state 46
	stmt:  THE JUMP REGISTER.EQUALS expr 

	EQUALS  shift 54
	.  error


state 47
	expr:  expr.NAND expr1 
	expr4:  OPEN PARENTHESIS expr.CLOSE PARENTHESIS 

	NAND  shift 31
	CLOSE  shift 55
	.  error


state 48
	goto:  GOTO number IF THE JUMP REGISTER IS.bit_constant 

	ZERO  shift 10
	ONE  shift 11
	.  error

	bit_constant  goto 56

state 49
	expr1:  THE ADDRESS OF expr1.    (12)

	.  reduce 12 (src line 124)


state 50
	expr2:  THE VALUE BEYOND expr2.    (14)

	.  reduce 14 (src line 135)


state 51
	expr2:  THE.VALUE BEYOND expr2 
	expr3:  THE.VALUE AT expr3 

	VALUE  shift 34
	.  error


state 52
	expr3:  THE VALUE AT expr3.    (16)

	.  reduce 16 (src line 146)


state 53
	expr3:  THE.VALUE AT expr3 

	VALUE  shift 57
	.  error


state 54
	stmt:  THE JUMP REGISTER EQUALS.expr 

	ZERO  shift 10
	ONE  shift 11
	THE  shift 41
	VARIABLE  shift 29
	OPEN  shift 26
	.  error

	variable  goto 27
	expr  goto 58
	expr1  goto 22
	expr2  goto 23
	expr3  goto 24
	expr4  goto 25
	bit_constant  goto 28

state 55
	expr4:  OPEN PARENTHESIS expr CLOSE.PARENTHESIS 

	PARENTHESIS  shift 59
	.  error


state 56
	goto:  GOTO number IF THE JUMP REGISTER IS bit_constant.    (8)

	.  reduce 8 (src line 92)


state 57
	expr3:  THE VALUE.AT expr3 

	AT  shift 45
	.  error


state 58
	expr:  expr.NAND expr1 
	stmt:  THE JUMP REGISTER EQUALS expr.    (22)

	NAND  shift 31
	.  reduce 22 (src line 181)


state 59
	expr4:  OPEN PARENTHESIS expr CLOSE PARENTHESIS.    (18)

	.  reduce 18 (src line 157)


27 terminals, 13 nonterminals
27 grammar rules, 60/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
62 working sets used
memory: parser 68/30000
32 extra closures
90 shift entries, 1 exceptions
30 goto entries
36 entries saved by goto default
Optimizer space used: output 87/30000
87 table entries, 0 zero
maximum spread: 27, maximum offset: 54
